{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "frensStorage_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "poolAddress",
          "type": "address"
        }
      ],
      "name": "checkValidatorState",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "isExiting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "pubKey",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "_isExiting",
          "type": "bool"
        }
      ],
      "name": "setExiting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461007457601f61045738819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600180546001600160a01b0319169190911790556040516103c790816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f94369101610322565b908286519483868095519384920161036e565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da9036908301610322565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161036e565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a381836102ce565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b83858492346102ca57602093846003193601126100a75780356001600160a01b038116908190036100a35763ac2a5dfd60e01b83528391839182905afa9081156102c057908491839161023d575b509061008f9160ff938286519483868095519384920161036e565b9150503d8083833e61024f81836102ce565b81019084818303126100a75780519067ffffffffffffffff82116100a3570181601f820112156100a75780519061028582610306565b92610292865194856102ce565b8284528683830101116100a35792826102b7879360ff96858061008f9801910161036e565b91925092610222565b83513d84823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102f057601f01601f191660200190565b81601f820112156103695780359061033982610306565b9261034760405194856102ce565b8284526020838301011161036957816000926020809301838601378301015290565b600080fd5b60005b8381106103815750506000910152565b818101518382015260200161037156fea2646970667358221220739138107c638f361486207280b5b255737cf18b0dfc77e39d2228fbdc9c496c64736f6c63430008110033",
    "sourceMap": "416:859:2:-:0;;;;;;;;;;;;;-1:-1:-1;;416:859:2;;;;-1:-1:-1;;;;;416:859:2;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:859:2;;;;;;;;;;;-1:-1:-1;;;;;;416:859:2;;;;;;;;;;;;;;;;;-1:-1:-1;416:859:2;;;;;;-1:-1:-1;416:859:2;;;;;-1:-1:-1;416:859:2",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c908163809bef62146101d457508063d3b150e6146100ab5763d6e65cb91461004457600080fd5b346100a75760203660031901126100a757803567ffffffffffffffff81116100a3576020809461007c60ff9461008f94369101610322565b908286519483868095519384920161036e565b820190815203019020541690519015158152f35b8380fd5b8280fd5b50346100a757816003193601126100a757803567ffffffffffffffff81116100a3576100da9036908301610322565b602435928315158094036101d05760015481516353adc3e960e11b8152602094916001600160a01b039190869082908590829086165afa9081156101c657889161018c575b501633036101585750908261013f9392519382858094519384920161036e565b8101858152030190209060ff8019835416911617905580f35b83606492519162461bcd60e51b8352820152601060248201526f36bab9ba1031329033bab0b93234b0b760811b6044820152fd5b90508581813d83116101bf575b6101a381836102ce565b810103126101bb575181811681036101bb573861011f565b8780fd5b503d610199565b84513d8a823e3d90fd5b8480fd5b83858492346102ca57602093846003193601126100a75780356001600160a01b038116908190036100a35763ac2a5dfd60e01b83528391839182905afa9081156102c057908491839161023d575b509061008f9160ff938286519483868095519384920161036e565b9150503d8083833e61024f81836102ce565b81019084818303126100a75780519067ffffffffffffffff82116100a3570181601f820112156100a75780519061028582610306565b92610292865194856102ce565b8284528683830101116100a35792826102b7879360ff96858061008f9801910161036e565b91925092610222565b83513d84823e3d90fd5b5080fd5b90601f8019910116810190811067ffffffffffffffff8211176102f057604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116102f057601f01601f191660200190565b81601f820112156103695780359061033982610306565b9261034760405194856102ce565b8284526020838301011161036957816000926020809301838601378301015290565b600080fd5b60005b8381106103815750506000910152565b818101518382015260200161037156fea2646970667358221220739138107c638f361486207280b5b255737cf18b0dfc77e39d2228fbdc9c496c64736f6c63430008110033",
    "sourceMap": "416:859:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:859:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;1175:26:2;;416:859;;;-1:-1:-1;;;;;416:859:2;;;;;;;;;;;;1175:26;;;;;;;;;;;416:859;;;1161:10;:40;416:859;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:859:2;;;;;1175:26;;;;;;;;;;;;;;;;:::i;:::-;;;416:859;;;;;;;;;;;;1175:26;;;416:859;;;;1175:26;;;;;;416:859;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;416:859:2;;;;;;;;-1:-1:-1;;;951:13:2;;416:859;;;;;;951:13;;;;;;;;;;;;;;416:859;;;;;;;;;;;;;;;;;;;;;:::i;951:13::-;;;;;;;;;;;;;:::i;:::-;;;416:859;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;951:13;;;;;;;416:859;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;416:859:2;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;416:859:2;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;416:859:2;;;;;;;;;;-1:-1:-1;;416:859:2;;;;:::o;:::-;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkValidatorState(address)": "809bef62",
    "isExiting(bytes)": "d6e65cb9",
    "setExiting(bytes,bool)": "d3b150e6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"frensStorage_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"checkValidatorState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isExiting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pubKey\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"_isExiting\",\"type\":\"bool\"}],\"name\":\"setExiting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkValidatorState(address)\":{\"details\":\"called by the staking pool to check if the validator is exiting\"},\"setExiting(bytes,bool)\":{\"details\":\"allows multisig (guardian) to set a pool as exiting. \"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrensOracle.sol\":\"FrensOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensOracle.sol\":{\"keccak256\":\"0x9efc7befb6f06fbb1630d4f693045533fb0a78bd0ffc7ade41c1c1c279b5ff21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3453a5daafa8be15ef4a2b5c123ead348826d34d64cd2d810ad6222f39f04c09\",\"dweb:/ipfs/QmVhv7hqg8Av18e9noGd7xVYx5VXenG1CjF4PTxQ3MVu1B\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensOracle.sol\":{\"keccak256\":\"0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316\",\"dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf\",\"dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0xd8bac46068041b9cd5672b8a7b90238e794735ea8d783448d8730b1c9aac0c74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6b9ec820f7f687243130ca6fcdc32ff6497a8c451d35976a084b0c1053d8d92\",\"dweb:/ipfs/QmPjjKLKj3wy5h261uDMX498ahoVBt2oEFpDAQBFaSj9SP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "frensStorage_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkValidatorState",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isExiting",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "pubKey",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "_isExiting",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setExiting"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkValidatorState(address)": {
            "details": "called by the staking pool to check if the validator is exiting"
          },
          "setExiting(bytes,bool)": {
            "details": "allows multisig (guardian) to set a pool as exiting. "
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/FrensOracle.sol": "FrensOracle"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensOracle.sol": {
        "keccak256": "0x9efc7befb6f06fbb1630d4f693045533fb0a78bd0ffc7ade41c1c1c279b5ff21",
        "urls": [
          "bzz-raw://3453a5daafa8be15ef4a2b5c123ead348826d34d64cd2d810ad6222f39f04c09",
          "dweb:/ipfs/QmVhv7hqg8Av18e9noGd7xVYx5VXenG1CjF4PTxQ3MVu1B"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensOracle.sol": {
        "keccak256": "0xdf2291434faca3e9976a42d2328a4347ced5978b29477e40eb75642185afdf67",
        "urls": [
          "bzz-raw://f84266eaa6df4162f6a2be8dac55a8fd6ba4865a1dda48f4c1dd27c07c8c4316",
          "dweb:/ipfs/QmWbkZtvjrmJ61ZvnFn81UsLEoqzzah7oDkb66eEoSqJ1y"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x426ac9a703a13d4127b56886421d55a8380292dadfb2693d2e8373316075f220",
        "urls": [
          "bzz-raw://e8179a87c1e6fcb4762230888412cfaa2e7ba52d314cee3ffe8a17933f259ccf",
          "dweb:/ipfs/QmacSF3u61KjNyK982VwKAA1G86cLZBhYvpPJhdprTg2Rd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0xd8bac46068041b9cd5672b8a7b90238e794735ea8d783448d8730b1c9aac0c74",
        "urls": [
          "bzz-raw://b6b9ec820f7f687243130ca6fcdc32ff6497a8c451d35976a084b0c1053d8d92",
          "dweb:/ipfs/QmPjjKLKj3wy5h261uDMX498ahoVBt2oEFpDAQBFaSj9SP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/FrensOracle.sol",
    "id": 598,
    "exportedSymbols": {
      "FrensOracle": [
        597
      ],
      "IFrensArt": [
        2718
      ],
      "IFrensOracle": [
        2776
      ],
      "IFrensStorage": [
        2927
      ],
      "IStakingPool": [
        3059
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:1275:2",
    "nodes": [
      {
        "id": 522,
        "nodeType": "PragmaDirective",
        "src": "0:31:2",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 523,
        "nodeType": "ImportDirective",
        "src": "294:39:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPool.sol",
        "file": "./interfaces/IStakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 598,
        "sourceUnit": 3060,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 524,
        "nodeType": "ImportDirective",
        "src": "334:39:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensOracle.sol",
        "file": "./interfaces/IFrensOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 598,
        "sourceUnit": 2777,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 525,
        "nodeType": "ImportDirective",
        "src": "374:40:2",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IFrensStorage.sol",
        "file": "./interfaces/IFrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 598,
        "sourceUnit": 2928,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 597,
        "nodeType": "ContractDefinition",
        "src": "416:859:2",
        "nodes": [
          {
            "id": 531,
            "nodeType": "VariableDeclaration",
            "src": "539:39:2",
            "nodes": [],
            "constant": false,
            "functionSelector": "d6e65cb9",
            "mutability": "mutable",
            "name": "isExiting",
            "nameLocation": "569:9:2",
            "scope": 597,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
              "typeString": "mapping(bytes => bool)"
            },
            "typeName": {
              "id": 530,
              "keyType": {
                "id": 528,
                "name": "bytes",
                "nodeType": "ElementaryTypeName",
                "src": "547:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                }
              },
              "nodeType": "Mapping",
              "src": "539:22:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                "typeString": "mapping(bytes => bool)"
              },
              "valueType": {
                "id": 529,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "556:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 534,
            "nodeType": "VariableDeclaration",
            "src": "585:26:2",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "599:12:2",
            "scope": 597,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFrensStorage_$2927",
              "typeString": "contract IFrensStorage"
            },
            "typeName": {
              "id": 533,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 532,
                "name": "IFrensStorage",
                "nameLocations": [
                  "585:13:2"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2927,
                "src": "585:13:2"
              },
              "referencedDeclaration": 2927,
              "src": "585:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                "typeString": "contract IFrensStorage"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 545,
            "nodeType": "FunctionDefinition",
            "src": "618:86:2",
            "nodes": [],
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "659:45:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 540,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 534,
                      "src": "669:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 541,
                      "name": "frensStorage_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 537,
                      "src": "684:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                        "typeString": "contract IFrensStorage"
                      }
                    },
                    "src": "669:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "669:28:2"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 537,
                  "mutability": "mutable",
                  "name": "frensStorage_",
                  "nameLocation": "644:13:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "630:27:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 536,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 535,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "630:13:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2927,
                      "src": "630:13:2"
                    },
                    "referencedDeclaration": 2927,
                    "src": "630:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:29:2"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "659:0:2"
            },
            "scope": 597,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 571,
            "nodeType": "FunctionDefinition",
            "src": "786:219:2",
            "nodes": [],
            "body": {
              "id": 570,
              "nodeType": "Block",
              "src": "864:141:2",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "887:4:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 570,
                      "src": "874:17:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPool_$3059",
                        "typeString": "contract IStakingPool"
                      },
                      "typeName": {
                        "id": 554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 553,
                          "name": "IStakingPool",
                          "nameLocations": [
                            "874:12:2"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3059,
                          "src": "874:12:2"
                        },
                        "referencedDeclaration": 3059,
                        "src": "874:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3059",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 559,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 557,
                        "name": "poolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 548,
                        "src": "907:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 556,
                      "name": "IStakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3059,
                      "src": "894:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IStakingPool_$3059_$",
                        "typeString": "type(contract IStakingPool)"
                      }
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "894:25:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPool_$3059",
                      "typeString": "contract IStakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "874:45:2"
                },
                {
                  "assignments": [
                    561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 561,
                      "mutability": "mutable",
                      "name": "pubKey",
                      "nameLocation": "942:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 570,
                      "src": "929:19:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 560,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "929:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 565,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 562,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "951:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPool_$3059",
                          "typeString": "contract IStakingPool"
                        }
                      },
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "956:6:2",
                      "memberName": "pubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2953,
                      "src": "951:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () view external returns (bytes memory)"
                      }
                    },
                    "id": 564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:13:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "929:35:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 566,
                      "name": "isExiting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "981:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                        "typeString": "mapping(bytes memory => bool)"
                      }
                    },
                    "id": 568,
                    "indexExpression": {
                      "id": 567,
                      "name": "pubKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 561,
                      "src": "991:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "981:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 552,
                  "id": 569,
                  "nodeType": "Return",
                  "src": "974:24:2"
                }
              ]
            },
            "baseFunctions": [
              2768
            ],
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "710:71:2",
              "text": "@dev called by the staking pool to check if the validator is exiting"
            },
            "functionSelector": "809bef62",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkValidatorState",
            "nameLocation": "795:19:2",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "poolAddress",
                  "nameLocation": "823:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "815:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "814:21:2"
            },
            "returnParameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 551,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 571,
                  "src": "858:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 550,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "857:6:2"
            },
            "scope": 597,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 596,
            "nodeType": "FunctionDefinition",
            "src": "1076:192:2",
            "nodes": [],
            "body": {
              "id": 595,
              "nodeType": "Block",
              "src": "1143:125:2",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 580,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1161:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1165:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1161:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 582,
                              "name": "frensStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "1175:12:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IFrensStorage_$2927",
                                "typeString": "contract IFrensStorage"
                              }
                            },
                            "id": 583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1188:11:2",
                            "memberName": "getGuardian",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2844,
                            "src": "1175:24:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1175:26:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1161:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d75737420626520677561726469616e",
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        },
                        "value": "must be guardian"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f06c186a7f228984c160e264b8e18583eb31f00eea2d76d4e90ba0553b56e30a",
                          "typeString": "literal_string \"must be guardian\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1153:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1153:69:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 588,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:69:2"
                },
                {
                  "expression": {
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 589,
                        "name": "isExiting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "1232:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes_memory_ptr_$_t_bool_$",
                          "typeString": "mapping(bytes memory => bool)"
                        }
                      },
                      "id": 591,
                      "indexExpression": {
                        "id": 590,
                        "name": "pubKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 574,
                        "src": "1242:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1232:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 592,
                      "name": "_isExiting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 576,
                      "src": "1252:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1232:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 594,
                  "nodeType": "ExpressionStatement",
                  "src": "1232:30:2"
                }
              ]
            },
            "baseFunctions": [
              2775
            ],
            "documentation": {
              "id": 572,
              "nodeType": "StructuredDocumentation",
              "src": "1011:61:2",
              "text": "@dev allows multisig (guardian) to set a pool as exiting. "
            },
            "functionSelector": "d3b150e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setExiting",
            "nameLocation": "1085:10:2",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 574,
                  "mutability": "mutable",
                  "name": "pubKey",
                  "nameLocation": "1109:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1096:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 576,
                  "mutability": "mutable",
                  "name": "_isExiting",
                  "nameLocation": "1122:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 596,
                  "src": "1117:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 575,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1117:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1095:38:2"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1143:0:2"
            },
            "scope": 597,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 526,
              "name": "IFrensOracle",
              "nameLocations": [
                "440:12:2"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2776,
              "src": "440:12:2"
            },
            "id": 527,
            "nodeType": "InheritanceSpecifier",
            "src": "440:12:2"
          }
        ],
        "canonicalName": "FrensOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          597,
          2776
        ],
        "name": "FrensOracle",
        "nameLocation": "425:11:2",
        "scope": 598,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 2
}